<<<<<<< HEAD
pch=16, axes=F, ylim=c(0,150000), xlab="", ylab="", type="o",col="blue",cex=0,)
mtext("nombre de vaccinés par million d'habitants",side=4,col="blue",line=2.5)
axis(4, ylim=c(0,3), col="blue",col.axis="blue")
dev.print(device = png, file = "gen/images/Eurostat_owid_Deces_Pays_Vaccin_pologne.png", width = 1000)
#danmark
moyenne_mobile_m40 <- running_mean(danmark$deces_tot_moins40, 8)
moyenne_m40 <- mean(moyenne_mobile_m40)
moyenne_mobile_m40<- data_frame(moyenne_mobile_m40)
moyenne_mobile_m40$numerosemaine<-1:nrow(moyenne_mobile_m40)+8
danmark <- danmark %>% left_join(moyenne_mobile_m40)
danmark$moyenne_m40 <- moyenne_m40
essai <- danmark %>% filter(numerosemaine>250)
par(mar=c(4,4,3,5))
plot(essai$numerosemaine, essai$deces_tot_plus_60-essai$deces_tot_60_64 ,
pch=16, axes=F, ylim=c(0,1500), xlab="", ylab="", type="o",col="black", cex=0, main="Situation du Danemark")
axis(2, ylim=c(0,400),col="red")
mtext("nombre de décès toutes causes des plus de 65 ans",side=2,line=3)
mtext("nombre de décès toutes causes des moins de 65 ans",side=2,line=2, col="red")
mtext("Attention, aucune donnée pour les moins de 40 ans",side=1,line=2, col="black")
abline(v=c(53,105,158,210,262,314,366,419), col="blue",lty=3)
text(26,1,"2013",cex=1.2)
text(78,1,"2014",cex=1.2)
text(130,1,"2015",cex=1.2)
text(183,1,"2016",cex=1.2)
text(235,1,"2017",cex=1.2)
text(287,1,"2018",cex=1.2)
text(339,1,"2019",cex=1.2)
text(391,1,"2020",cex=1.2)
text(435,1,"2021",cex=1.2)
box() # pour encadrer le graphique
par(new=T)
plot(essai$numerosemaine, essai$deces_tot_40_60+essai$deces_tot_60_64,
pch=16, axes=F, ylim=c(0,1500), xlab="", ylab="", type="o",col="red",cex=0,)
par(new=T)
plot(essai$numerosemaine, essai$new_vaccinations_smoothed_per_million,
pch=16, axes=F, ylim=c(0,150000), xlab="", ylab="", type="o",col="blue",cex=0,)
mtext("nombre de vaccinés par million d'habitants",side=4,col="blue",line=2.5)
axis(4, ylim=c(0,3), col="blue",col.axis="blue")
dev.print(device = png, file = "gen/images/Eurostat_owid_Deces_Pays_Vaccin_danmark.png", width = 1000)
#grece
moyenne_mobile_m40 <- running_mean(grece$deces_tot_moins40, 8)
moyenne_m40 <- mean(moyenne_mobile_m40)
moyenne_mobile_m40<- data_frame(moyenne_mobile_m40)
moyenne_mobile_m40$numerosemaine<-1:nrow(moyenne_mobile_m40)+113
grece <- grece %>% left_join(moyenne_mobile_m40)
grece$moyenne_m40 <- moyenne_m40
essai <- grece %>% filter(numerosemaine>250)
par(mar=c(4,4,3,5))
plot(essai$numerosemaine, essai$deces_tot_plus_60-essai$deces_tot_60_64 ,
pch=16, axes=F, ylim=c(0,4000), xlab="", ylab="", type="o",col="black", cex=0, main="Situation de la Grèce")
axis(2, ylim=c(0,400),col="red")
mtext("nombre de décès toutes causes des plus de 65 ans",side=2,line=3)
mtext("nombre de décès toutes causes des moins de 65 ans",side=2,line=2, col="red")
mtext("Attention, aucune donnée pour les moins de 40 ans",side=1,line=2, col="black")
abline(v=c(53,105,158,210,262,314,366,419), col="blue",lty=3)
text(26,1,"2013",cex=1.2)
text(78,1,"2014",cex=1.2)
text(130,1,"2015",cex=1.2)
text(183,1,"2016",cex=1.2)
text(235,1,"2017",cex=1.2)
text(287,1,"2018",cex=1.2)
text(339,1,"2019",cex=1.2)
text(391,1,"2020",cex=1.2)
text(435,1,"2021",cex=1.2)
box() # pour encadrer le graphique
par(new=T)
plot(essai$numerosemaine, essai$deces_tot_40_60+essai$deces_tot_60_64,
pch=16, axes=F, ylim=c(0,4000), xlab="", ylab="", type="o",col="red",cex=0,)
par(new=T)
plot(essai$numerosemaine, essai$new_vaccinations_smoothed_per_million,
pch=16, axes=F, ylim=c(0,150000), xlab="", ylab="", type="o",col="blue",cex=0,)
mtext("nombre de vaccinés par million d'habitants",side=4,col="blue",line=2.5)
axis(4, ylim=c(0,3), col="blue",col.axis="blue")
dev.print(device = png, file = "gen/images/Eurostat_owid_Deces_Pays_Vaccin_grece.png", width = 1000)
#suisse
moyenne_mobile_m40 <- running_mean(suisse$deces_tot_moins40, 8)
moyenne_m40 <- mean(moyenne_mobile_m40)
moyenne_mobile_m40<- data_frame(moyenne_mobile_m40)
moyenne_mobile_m40$numerosemaine<-1:nrow(moyenne_mobile_m40)+8
suisse <- suisse %>% left_join(moyenne_mobile_m40)
suisse$moyenne_m40 <- moyenne_m40
essai <- suisse %>% filter(numerosemaine>250)
par(mar=c(4,4,3,5))
plot(essai$numerosemaine, essai$deces_tot_plus_60-essai$deces_tot_60_64 ,
pch=16, axes=F, ylim=c(0,2500), xlab="", ylab="", type="o",col="black", cex=0, main="Situation de la Suisse")
axis(2, ylim=c(0,400),col="red")
mtext("nombre de décès toutes causes des plus de 65 ans",side=2,line=3)
mtext("nombre de décès toutes causes des moins de 65 ans",side=2,line=2, col="red")
abline(v=c(53,105,158,210,262,314,366,419), col="blue",lty=3)
text(26,1,"2013",cex=1.2)
text(78,1,"2014",cex=1.2)
text(130,1,"2015",cex=1.2)
text(183,1,"2016",cex=1.2)
text(235,1,"2017",cex=1.2)
text(287,1,"2018",cex=1.2)
text(339,1,"2019",cex=1.2)
text(391,1,"2020",cex=1.2)
text(435,1,"2021",cex=1.2)
box() # pour encadrer le graphique
par(new=T)
plot(essai$numerosemaine, essai$deces_tot_40_60+essai$deces_tot_60_64,
pch=16, axes=F, ylim=c(0,2500), xlab="", ylab="", type="o",col="red",cex=0,)
par(new=T)
plot(essai$numerosemaine, essai$new_vaccinations_smoothed_per_million,
pch=16, axes=F, ylim=c(0,150000), xlab="", ylab="", type="o",col="blue",cex=0,)
mtext("nombre de vaccinés par million d'habitants",side=4,col="blue",line=2.5)
axis(4, ylim=c(0,3), col="blue",col.axis="blue")
dev.print(device = png, file = "gen/images/Eurostat_owid_Deces_Pays_Vaccin_suisse.png", width = 1000)
#suede
moyenne_mobile_m40 <- running_mean(suede$deces_tot_moins40, 8)
moyenne_m40 <- mean(moyenne_mobile_m40)
moyenne_mobile_m40<- data_frame(moyenne_mobile_m40)
moyenne_mobile_m40$numerosemaine<-1:nrow(moyenne_mobile_m40)+8
suede <- suede %>% left_join(moyenne_mobile_m40)
suede$moyenne_m40 <- moyenne_m40
essai <- suede %>% filter(numerosemaine>250)
par(mar=c(4,4,3,5))
plot(essai$numerosemaine, essai$deces_tot_plus_60-essai$deces_tot_60_64 ,
pch=16, axes=F, ylim=c(0,3000), xlab="", ylab="", type="o",col="black", cex=0, main="Situation de la Suède")
axis(2, ylim=c(0,400),col="red")
mtext("nombre de décès toutes causes des plus de 65 ans",side=2,line=3)
mtext("nombre de décès toutes causes des moins de 65 ans",side=2,line=2, col="red")
abline(v=c(53,105,158,210,262,314,366,419), col="blue",lty=3)
text(26,1,"2013",cex=1.2)
text(78,1,"2014",cex=1.2)
text(130,1,"2015",cex=1.2)
text(183,1,"2016",cex=1.2)
text(235,1,"2017",cex=1.2)
text(287,1,"2018",cex=1.2)
text(339,1,"2019",cex=1.2)
text(391,1,"2020",cex=1.2)
text(435,1,"2021",cex=1.2)
box() # pour encadrer le graphique
par(new=T)
plot(essai$numerosemaine, essai$deces_tot_40_60+essai$deces_tot_60_64,
pch=16, axes=F, ylim=c(0,3000), xlab="", ylab="", type="o",col="red",cex=0,)
par(new=T)
plot(essai$numerosemaine, essai$new_vaccinations_smoothed_per_million,
pch=16, axes=F, ylim=c(0,150000), xlab="", ylab="", type="o",col="blue",cex=0,)
mtext("nombre de vaccinés par million d'habitants",side=4,col="blue",line=2.5)
axis(4, ylim=c(0,3), col="blue",col.axis="blue")
dev.print(device = png, file = "gen/images/Eurostat_owid_Deces_Pays_Vaccin_suede.png", width = 1000)
#serbie
moyenne_mobile_m40 <- running_mean(serbie$deces_tot_moins40, 8)
moyenne_m40 <- mean(moyenne_mobile_m40)
moyenne_mobile_m40<- data_frame(moyenne_mobile_m40)
moyenne_mobile_m40$numerosemaine<-1:nrow(moyenne_mobile_m40)+8
serbie <- serbie %>% left_join(moyenne_mobile_m40)
serbie$moyenne_m40 <- moyenne_m40
essai <- serbie %>% filter(numerosemaine>250)
par(mar=c(4,4,3,5))
plot(essai$numerosemaine, essai$deces_tot_plus_60-essai$deces_tot_60_64 ,
pch=16, axes=F, ylim=c(0,4000), xlab="", ylab="", type="o",col="black", cex=0, main="Situation de la Serbie")
axis(2, ylim=c(0,400),col="red")
mtext("nombre de décès toutes causes des plus de 65 ans",side=2,line=3)
mtext("nombre de décès toutes causes des moins de 65 ans",side=2,line=2, col="red")
abline(v=c(53,105,158,210,262,314,366,419), col="blue",lty=3)
text(26,1,"2013",cex=1.2)
text(78,1,"2014",cex=1.2)
text(130,1,"2015",cex=1.2)
text(183,1,"2016",cex=1.2)
text(235,1,"2017",cex=1.2)
text(287,1,"2018",cex=1.2)
text(339,1,"2019",cex=1.2)
text(391,1,"2020",cex=1.2)
text(435,1,"2021",cex=1.2)
box() # pour encadrer le graphique
par(new=T)
plot(essai$numerosemaine, essai$deces_tot_40_60+essai$deces_tot_60_64,
pch=16, axes=F, ylim=c(0,4000), xlab="", ylab="", type="o",col="red",cex=0,)
par(new=T)
plot(essai$numerosemaine, essai$new_vaccinations_smoothed_per_million,
pch=16, axes=F, ylim=c(0,150000), xlab="", ylab="", type="o",col="blue",cex=0,)
mtext("nombre de vaccinés par million d'habitants",side=4,col="blue",line=2.5)
axis(4, ylim=c(0,3), col="blue",col.axis="blue")
dev.print(device = png, file = "gen/images/Eurostat_owid_Deces_Pays_Vaccin_serbie.png", width = 1000)
par(mar=c(4,4,3,5))
plot(essai$numerosemaine, essai$deces_tot_plus_60-essai$deces_tot_60_64 ,
pch=16, axes=F, ylim=c(0,1200), xlab="", ylab="", type="o",col="black", cex=0, main="Situation de l'armenie")
axis(2, ylim=c(0,400),col="red")
mtext("nombre de décès toutes causes des plus de 65 ans",side=2,line=3)
mtext("nombre de décès toutes causes des moins de 65 ans",side=2,line=2, col="red")
abline(v=c(53,105,158,210,262,314,366,419), col="blue",lty=3)
text(26,1,"2013",cex=1.2)
text(78,1,"2014",cex=1.2)
text(130,1,"2015",cex=1.2)
text(183,1,"2016",cex=1.2)
text(235,1,"2017",cex=1.2)
text(287,1,"2018",cex=1.2)
text(339,1,"2019",cex=1.2)
text(391,1,"2020",cex=1.2)
text(435,1,"2021",cex=1.2)
box() # pour encadrer le graphique
par(new=T)
plot(essai$numerosemaine, essai$deces_tot_40_60+essai$deces_tot_60_64 + essai$deces_tot_moins40,
pch=16, axes=F, ylim=c(0,1200), xlab="", ylab="", type="o",col="red",cex=0,)
par(new=T)
plot(essai$numerosemaine, essai$new_vaccinations_smoothed_per_million,
pch=16, axes=F, ylim=c(0,150000), xlab="", ylab="", type="o",col="blue",cex=0,)
mtext("nombre de vaccinés par million d'habitants",side=4,col="blue",line=2.5)
axis(4, ylim=c(0,3), col="blue",col.axis="blue")
dev.print(device = png, file = "gen/images/Eurostat_owid_Deces_Pays_Vaccin_armenie.png", width = 1000)
moyenne_mobile_m40 <- running_mean(armenie$deces_tot_moins40, 8)
moyenne_m40 <- mean(moyenne_mobile_m40)
moyenne_mobile_m40<- data_frame(moyenne_mobile_m40)
moyenne_mobile_m40$numerosemaine<-1:nrow(moyenne_mobile_m40)+8
armenie <- armenie %>% left_join(moyenne_mobile_m40)
armenie$moyenne_m40 <- moyenne_m40
essai <- armenie %>% filter(numerosemaine>250)
par(mar=c(4,4,3,5))
plot(essai$numerosemaine, essai$deces_tot_plus_60-essai$deces_tot_60_64 ,
pch=16, axes=F, ylim=c(0,1200), xlab="", ylab="", type="o",col="black", cex=0, main="Situation de l'armenie")
axis(2, ylim=c(0,400),col="red")
mtext("nombre de décès toutes causes des plus de 65 ans",side=2,line=3)
mtext("nombre de décès toutes causes des moins de 65 ans",side=2,line=2, col="red")
abline(v=c(53,105,158,210,262,314,366,419), col="blue",lty=3)
text(26,1,"2013",cex=1.2)
text(78,1,"2014",cex=1.2)
text(130,1,"2015",cex=1.2)
text(183,1,"2016",cex=1.2)
text(235,1,"2017",cex=1.2)
text(287,1,"2018",cex=1.2)
text(339,1,"2019",cex=1.2)
text(391,1,"2020",cex=1.2)
text(435,1,"2021",cex=1.2)
box() # pour encadrer le graphique
par(new=T)
plot(essai$numerosemaine, essai$deces_tot_40_60+essai$deces_tot_60_64 + essai$deces_tot_moins40,
pch=16, axes=F, ylim=c(0,1200), xlab="", ylab="", type="o",col="red",cex=0,)
par(new=T)
plot(essai$numerosemaine, essai$new_vaccinations_smoothed_per_million,
pch=16, axes=F, ylim=c(0,150000), xlab="", ylab="", type="o",col="blue",cex=0,)
mtext("nombre de vaccinés par million d'habitants",side=4,col="blue",line=2.5)
axis(4, ylim=c(0,3), col="blue",col.axis="blue")
dev.print(device = png, file = "gen/images/Eurostat_owid_Deces_Pays_Vaccin_armenie.png", width = 1000)
par(mar=c(4,4,3,5))
plot(essai$numerosemaine, essai$deces_tot_moins40 ,
pch=16, axes=F, ylim=c(0,20), xlab="", ylab="", type="o",col="black", cex=0, main="Situation de la armenie")
axis(2, ylim=c(0,20),col="red")
mtext("nombre de décès toutes causes des plus de 65 ans",side=2,line=3)
mtext("nombre de décès toutes causes des moins de 65 ans",side=2,line=2, col="red")
abline(v=c(53,105,158,210,262,314,366,419), col="blue",lty=3)
text(26,1,"2013",cex=1.2)
text(78,1,"2014",cex=1.2)
text(130,1,"2015",cex=1.2)
text(183,1,"2016",cex=1.2)
text(235,1,"2017",cex=1.2)
text(287,1,"2018",cex=1.2)
text(339,1,"2019",cex=1.2)
text(391,1,"2020",cex=1.2)
text(435,1,"2021",cex=1.2)
box() # pour encadrer le graphique
par(new=T)
plot(essai$numerosemaine, essai$moyenne_mobile_m40,
pch=16, axes=F, ylim=c(0,20), xlab="", ylab="", type="o",col="red",cex=0,)
par(new=T)
plot(essai$numerosemaine, essai$new_vaccinations_smoothed_per_million,
pch=16, axes=F, ylim=c(0,8500), xlab="", ylab="", type="o",col="blue",cex=0,)
mtext("nombre de vaccinés par million d'habitants",side=4,col="blue",line=2.5)
axis(4, ylim=c(0,3), col="blue",col.axis="blue")
dev.print(device = png, file = "gen/images/Eurostat_owid_Deces_Pays_Vaccin_armenie_jeune.png", width = 1000)
par(mar=c(4,4,3,5))
plot(essai$numerosemaine, essai$deces_tot_moins40 ,
pch=16, axes=F, ylim=c(0,20), xlab="", ylab="", type="o",col="black", cex=0, main="Situation de la armenie")
axis(2, ylim=c(0,40),col="red")
mtext("nombre de décès toutes causes des moins de 40 ans",side=2,line=3)
mtext("nombre de décès toutes causes lissés des moins de 40 ans",side=2,line=2, col="red")
abline(v=c(53,105,158,210,262,314,366,419), col="blue",lty=3)
text(26,1,"2013",cex=1.2)
text(78,1,"2014",cex=1.2)
text(130,1,"2015",cex=1.2)
text(183,1,"2016",cex=1.2)
text(235,1,"2017",cex=1.2)
text(287,1,"2018",cex=1.2)
text(339,1,"2019",cex=1.2)
text(391,1,"2020",cex=1.2)
text(435,1,"2021",cex=1.2)
box() # pour encadrer le graphique
par(new=T)
plot(essai$numerosemaine, essai$moyenne_mobile_m40,
pch=16, axes=F, ylim=c(0,40), xlab="", ylab="", type="o",col="red",cex=0,)
par(new=T)
plot(essai$numerosemaine, essai$new_vaccinations_smoothed_per_million,
pch=16, axes=F, ylim=c(0,8500), xlab="", ylab="", type="o",col="blue",cex=0,)
mtext("nombre de vaccinés par million d'habitants",side=4,col="blue",line=2.5)
axis(4, ylim=c(0,3), col="blue",col.axis="blue")
dev.print(device = png, file = "gen/images/Eurostat_owid_Deces_Pays_Vaccin_armenie_jeune.png", width = 1000)
View(armenie)
armenie<- deces_standard_pays_semaine %>% filter(geo =="AM")
moyenne_mobile_m40 <- running_mean(armenie$deces_tot_moins40, 8)
moyenne_m40 <- mean(moyenne_mobile_m40)
moyenne_mobile_m40<- data_frame(moyenne_mobile_m40)
moyenne_mobile_m40$numerosemaine<-1:nrow(moyenne_mobile_m40)+113
armenie <- armenie %>% left_join(moyenne_mobile_m40)
armenie$moyenne_m40 <- moyenne_m40
essai <- armenie %>% filter(numerosemaine>250)
par(mar=c(4,4,3,5))
plot(essai$numerosemaine, essai$deces_tot_plus_60-essai$deces_tot_60_64 ,
pch=16, axes=F, ylim=c(0,1200), xlab="", ylab="", type="o",col="black", cex=0, main="Situation de l'armenie")
axis(2, ylim=c(0,400),col="red")
mtext("nombre de décès toutes causes des plus de 65 ans",side=2,line=3)
mtext("nombre de décès toutes causes des moins de 65 ans",side=2,line=2, col="red")
abline(v=c(53,105,158,210,262,314,366,419), col="blue",lty=3)
text(26,1,"2013",cex=1.2)
text(78,1,"2014",cex=1.2)
text(130,1,"2015",cex=1.2)
text(183,1,"2016",cex=1.2)
text(235,1,"2017",cex=1.2)
text(287,1,"2018",cex=1.2)
text(339,1,"2019",cex=1.2)
text(391,1,"2020",cex=1.2)
text(435,1,"2021",cex=1.2)
box() # pour encadrer le graphique
par(new=T)
plot(essai$numerosemaine, essai$deces_tot_40_60+essai$deces_tot_60_64 + essai$deces_tot_moins40,
pch=16, axes=F, ylim=c(0,1200), xlab="", ylab="", type="o",col="red",cex=0,)
par(new=T)
plot(essai$numerosemaine, essai$new_vaccinations_smoothed_per_million,
pch=16, axes=F, ylim=c(0,150000), xlab="", ylab="", type="o",col="blue",cex=0,)
mtext("nombre de vaccinés par million d'habitants",side=4,col="blue",line=2.5)
axis(4, ylim=c(0,3), col="blue",col.axis="blue")
dev.print(device = png, file = "gen/images/Eurostat_owid_Deces_Pays_Vaccin_armenie.png", width = 1000)
par(mar=c(4,4,3,5))
plot(essai$numerosemaine, essai$deces_tot_moins40 ,
pch=16, axes=F, ylim=c(0,20), xlab="", ylab="", type="o",col="black", cex=0, main="Situation de la armenie")
axis(2, ylim=c(0,40),col="red")
mtext("nombre de décès toutes causes des moins de 40 ans",side=2,line=3)
mtext("nombre de décès toutes causes lissés des moins de 40 ans",side=2,line=2, col="red")
abline(v=c(53,105,158,210,262,314,366,419), col="blue",lty=3)
text(26,1,"2013",cex=1.2)
text(78,1,"2014",cex=1.2)
text(130,1,"2015",cex=1.2)
text(183,1,"2016",cex=1.2)
text(235,1,"2017",cex=1.2)
text(287,1,"2018",cex=1.2)
text(339,1,"2019",cex=1.2)
text(391,1,"2020",cex=1.2)
text(435,1,"2021",cex=1.2)
box() # pour encadrer le graphique
par(new=T)
plot(essai$numerosemaine, essai$moyenne_mobile_m40,
pch=16, axes=F, ylim=c(0,40), xlab="", ylab="", type="o",col="red",cex=0,)
par(new=T)
plot(essai$numerosemaine, essai$new_vaccinations_smoothed_per_million,
pch=16, axes=F, ylim=c(0,8500), xlab="", ylab="", type="o",col="blue",cex=0,)
mtext("nombre de vaccinés par million d'habitants",side=4,col="blue",line=2.5)
axis(4, ylim=c(0,3), col="blue",col.axis="blue")
dev.print(device = png, file = "gen/images/Eurostat_owid_Deces_Pays_Vaccin_armenie_jeune.png", width = 1000)
par(mar=c(4,4,3,5))
plot(essai$numerosemaine, essai$deces_tot_moins40 ,
pch=16, axes=F, ylim=c(0,40), xlab="", ylab="", type="o",col="black", cex=0, main="Situation de la armenie")
axis(2, ylim=c(0,40),col="red")
mtext("nombre de décès toutes causes des moins de 40 ans",side=2,line=3)
mtext("nombre de décès toutes causes lissés des moins de 40 ans",side=2,line=2, col="red")
abline(v=c(53,105,158,210,262,314,366,419), col="blue",lty=3)
text(26,1,"2013",cex=1.2)
text(78,1,"2014",cex=1.2)
text(130,1,"2015",cex=1.2)
text(183,1,"2016",cex=1.2)
text(235,1,"2017",cex=1.2)
text(287,1,"2018",cex=1.2)
text(339,1,"2019",cex=1.2)
text(391,1,"2020",cex=1.2)
text(435,1,"2021",cex=1.2)
box() # pour encadrer le graphique
par(new=T)
plot(essai$numerosemaine, essai$moyenne_mobile_m40,
pch=16, axes=F, ylim=c(0,40), xlab="", ylab="", type="o",col="red",cex=0,)
par(new=T)
plot(essai$numerosemaine, essai$new_vaccinations_smoothed_per_million,
pch=16, axes=F, ylim=c(0,8500), xlab="", ylab="", type="o",col="blue",cex=0,)
mtext("nombre de vaccinés par million d'habitants",side=4,col="blue",line=2.5)
axis(4, ylim=c(0,3), col="blue",col.axis="blue")
dev.print(device = png, file = "gen/images/Eurostat_owid_Deces_Pays_Vaccin_armenie_jeune.png", width = 1000)
par(mar=c(4,4,3,5))
plot(essai$numerosemaine, essai$deces_tot_moins40 ,
pch=16, axes=F, ylim=c(0,80), xlab="", ylab="", type="o",col="black", cex=0, main="Situation de la armenie")
axis(2, ylim=c(0,40),col="red")
mtext("nombre de décès toutes causes des moins de 40 ans",side=2,line=3)
mtext("nombre de décès toutes causes lissés des moins de 40 ans",side=2,line=2, col="red")
abline(v=c(53,105,158,210,262,314,366,419), col="blue",lty=3)
text(26,1,"2013",cex=1.2)
text(78,1,"2014",cex=1.2)
text(130,1,"2015",cex=1.2)
text(183,1,"2016",cex=1.2)
text(235,1,"2017",cex=1.2)
text(287,1,"2018",cex=1.2)
text(339,1,"2019",cex=1.2)
text(391,1,"2020",cex=1.2)
text(435,1,"2021",cex=1.2)
box() # pour encadrer le graphique
par(new=T)
plot(essai$numerosemaine, essai$moyenne_mobile_m40,
pch=16, axes=F, ylim=c(0,80), xlab="", ylab="", type="o",col="red",cex=0,)
par(new=T)
plot(essai$numerosemaine, essai$new_vaccinations_smoothed_per_million,
pch=16, axes=F, ylim=c(0,8500), xlab="", ylab="", type="o",col="blue",cex=0,)
mtext("nombre de vaccinés par million d'habitants",side=4,col="blue",line=2.5)
axis(4, ylim=c(0,3), col="blue",col.axis="blue")
dev.print(device = png, file = "gen/images/Eurostat_owid_Deces_Pays_Vaccin_armenie_jeune.png", width = 1000)
#estonie
moyenne_mobile_m40 <- running_mean(estonie$deces_tot_moins40, 8)
moyenne_m40 <- mean(moyenne_mobile_m40)
moyenne_mobile_m40<- data_frame(moyenne_mobile_m40)
moyenne_mobile_m40$numerosemaine<-1:nrow(moyenne_mobile_m40)+8
estonie <- estonie %>% left_join(moyenne_mobile_m40)
estonie$moyenne_m40 <- moyenne_m40
essai <- estonie %>% filter(numerosemaine>250)
par(mar=c(4,4,3,5))
plot(essai$numerosemaine, essai$deces_tot_plus_60-essai$deces_tot_60_64 ,
pch=16, axes=F, ylim=c(0,200), xlab="", ylab="", type="o",col="black", cex=0, main="Situation de l'estonie")
axis(2, ylim=c(0,400),col="red")
mtext("nombre de décès toutes causes des plus de 65 ans",side=2,line=3)
mtext("nombre de décès toutes causes des moins de 65 ans",side=2,line=2, col="red")
abline(v=c(53,105,158,210,262,314,366,419), col="blue",lty=3)
text(26,1,"2013",cex=1.2)
text(78,1,"2014",cex=1.2)
text(130,1,"2015",cex=1.2)
text(183,1,"2016",cex=1.2)
text(235,1,"2017",cex=1.2)
text(287,1,"2018",cex=1.2)
text(339,1,"2019",cex=1.2)
text(391,1,"2020",cex=1.2)
text(435,1,"2021",cex=1.2)
box() # pour encadrer le graphique
par(new=T)
plot(essai$numerosemaine, essai$deces_tot_40_60+essai$deces_tot_60_64,
pch=16, axes=F, ylim=c(0,200), xlab="", ylab="", type="o",col="red",cex=0,)
par(new=T)
plot(essai$numerosemaine, essai$new_vaccinations_smoothed_per_million,
pch=16, axes=F, ylim=c(0,150000), xlab="", ylab="", type="o",col="blue",cex=0,)
mtext("nombre de vaccinés par million d'habitants",side=4,col="blue",line=2.5)
axis(4, ylim=c(0,3), col="blue",col.axis="blue")
dev.print(device = png, file = "gen/images/Eurostat_owid_Deces_Pays_Vaccin_estonie.png", width = 1000)
par(mar=c(4,4,3,5))
plot(essai$numerosemaine, essai$deces_tot_plus_60-essai$deces_tot_60_64 ,
pch=16, axes=F, ylim=c(0,300), xlab="", ylab="", type="o",col="black", cex=0, main="Situation de l'estonie")
axis(2, ylim=c(0,400),col="red")
mtext("nombre de décès toutes causes des plus de 65 ans",side=2,line=3)
mtext("nombre de décès toutes causes des moins de 65 ans",side=2,line=2, col="red")
abline(v=c(53,105,158,210,262,314,366,419), col="blue",lty=3)
text(26,1,"2013",cex=1.2)
text(78,1,"2014",cex=1.2)
text(130,1,"2015",cex=1.2)
text(183,1,"2016",cex=1.2)
text(235,1,"2017",cex=1.2)
text(287,1,"2018",cex=1.2)
text(339,1,"2019",cex=1.2)
text(391,1,"2020",cex=1.2)
text(435,1,"2021",cex=1.2)
box() # pour encadrer le graphique
par(new=T)
plot(essai$numerosemaine, essai$deces_tot_40_60+essai$deces_tot_60_64,
pch=16, axes=F, ylim=c(0,300), xlab="", ylab="", type="o",col="red",cex=0,)
par(new=T)
plot(essai$numerosemaine, essai$new_vaccinations_smoothed_per_million,
pch=16, axes=F, ylim=c(0,150000), xlab="", ylab="", type="o",col="blue",cex=0,)
mtext("nombre de vaccinés par million d'habitants",side=4,col="blue",line=2.5)
axis(4, ylim=c(0,3), col="blue",col.axis="blue")
dev.print(device = png, file = "gen/images/Eurostat_owid_Deces_Pays_Vaccin_estonie.png", width = 1000)
par(mar=c(4,4,3,5))
plot(essai$numerosemaine, essai$deces_tot_plus_60-essai$deces_tot_60_64 ,
pch=16, axes=F, ylim=c(0,300), xlab="", ylab="", type="o",col="black", cex=0, main="Situation de l'estonie")
axis(2, ylim=c(0,400),col="red")
mtext("nombre de décès toutes causes des plus de 65 ans",side=2,line=3)
mtext("nombre de décès toutes causes des moins de 65 ans",side=2,line=2, col="red")
abline(v=c(53,105,158,210,262,314,366,419), col="blue",lty=3)
text(26,1,"2013",cex=1.2)
text(78,1,"2014",cex=1.2)
text(130,1,"2015",cex=1.2)
text(183,1,"2016",cex=1.2)
text(235,1,"2017",cex=1.2)
text(287,1,"2018",cex=1.2)
text(339,1,"2019",cex=1.2)
text(391,1,"2020",cex=1.2)
text(435,1,"2021",cex=1.2)
box() # pour encadrer le graphique
par(new=T)
plot(essai$numerosemaine, essai$deces_tot_40_60+essai$deces_tot_60_64,
pch=16, axes=F, ylim=c(0,400), xlab="", ylab="", type="o",col="red",cex=0,)
par(new=T)
plot(essai$numerosemaine, essai$new_vaccinations_smoothed_per_million,
pch=16, axes=F, ylim=c(0,150000), xlab="", ylab="", type="o",col="blue",cex=0,)
mtext("nombre de vaccinés par million d'habitants",side=4,col="blue",line=2.5)
axis(4, ylim=c(0,3), col="blue",col.axis="blue")
dev.print(device = png, file = "gen/images/Eurostat_owid_Deces_Pays_Vaccin_estonie.png", width = 1000)
par(mar=c(4,4,3,5))
plot(essai$numerosemaine, essai$deces_tot_plus_60-essai$deces_tot_60_64 ,
pch=16, axes=F, ylim=c(0,400), xlab="", ylab="", type="o",col="black", cex=0, main="Situation de l'estonie")
axis(2, ylim=c(0,400),col="red")
mtext("nombre de décès toutes causes des plus de 65 ans",side=2,line=3)
mtext("nombre de décès toutes causes des moins de 65 ans",side=2,line=2, col="red")
abline(v=c(53,105,158,210,262,314,366,419), col="blue",lty=3)
text(26,1,"2013",cex=1.2)
text(78,1,"2014",cex=1.2)
text(130,1,"2015",cex=1.2)
text(183,1,"2016",cex=1.2)
text(235,1,"2017",cex=1.2)
text(287,1,"2018",cex=1.2)
text(339,1,"2019",cex=1.2)
text(391,1,"2020",cex=1.2)
text(435,1,"2021",cex=1.2)
box() # pour encadrer le graphique
par(new=T)
plot(essai$numerosemaine, essai$deces_tot_40_60+essai$deces_tot_60_64,
pch=16, axes=F, ylim=c(0,400), xlab="", ylab="", type="o",col="red",cex=0,)
par(new=T)
plot(essai$numerosemaine, essai$new_vaccinations_smoothed_per_million,
pch=16, axes=F, ylim=c(0,150000), xlab="", ylab="", type="o",col="blue",cex=0,)
mtext("nombre de vaccinés par million d'habitants",side=4,col="blue",line=2.5)
axis(4, ylim=c(0,3), col="blue",col.axis="blue")
dev.print(device = png, file = "gen/images/Eurostat_owid_Deces_Pays_Vaccin_estonie.png", width = 1000)
=======
source('~/R/eurostat.R')
source('~/R/analyses_eurostat.R', echo=TRUE)
source("C:/J/COVID/Pierre_CHAILLOT/deces_europe/010_creation_tables_deces_europe.R", encoding = 'UTF-8', echo=TRUE)
source("C:/J/COVID/Pierre_CHAILLOT/deces_europe/020_analyses_eurostat.R", encoding = 'UTF-8', echo=TRUE)
deces_complet <- readRDS("gen/rds/Eurostat_deces_complet.RDS")
esperance_vie <- deces_complet %>% group_by(time,geo, agequinq) %>% summarise(deces=sum(deces),population=sum(population))
#caclul des taux de mortalité et taux de survie par âge
esperance_vie <- esperance_vie %>% mutate(taux_mortalite=deces/population) %>%
mutate(taux_survie=1-taux_mortalite)
#transposition
esperance_vie_t <- esperance_vie %>% select(geo,time,agequinq,taux_mortalite,taux_survie) %>% pivot_wider(names_from = agequinq, values_from = c(taux_mortalite,taux_survie))
esperance_vie_t <- esperance_vie_t %>% filter(!is.na(taux_mortalite_Y_LT5))
#calcul des survivants depuis la naissance
esperance_vie_t <- esperance_vie_t %>% mutate(survivant_naissance_Y_LT5=taux_survie_Y_LT5)
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y5-9`=
`taux_survie_Y5-9`*survivant_naissance_Y_LT5)
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y10-14`=
`taux_survie_Y10-14`*`survivant_naissance_Y5-9`)
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y15-19`=
`taux_survie_Y15-19`*`survivant_naissance_Y10-14`)
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y20-24`=
`taux_survie_Y20-24`*`survivant_naissance_Y15-19`)
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y25-29`=
`taux_survie_Y25-29`*`survivant_naissance_Y20-24`)
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y30-34`=
`taux_survie_Y30-34`*`survivant_naissance_Y25-29`)
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y35-39`=
`taux_survie_Y35-39`*`survivant_naissance_Y30-34`)
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y40-44`=
`taux_survie_Y40-44`*`survivant_naissance_Y35-39`)
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y45-49`=
`taux_survie_Y45-49`*`survivant_naissance_Y40-44`)
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y50-54`=
`taux_survie_Y50-54`*`survivant_naissance_Y45-49`)
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y55-59`=
`taux_survie_Y55-59`*`survivant_naissance_Y50-54`)
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y60-64`=
`taux_survie_Y60-64`*`survivant_naissance_Y55-59`)
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y65-69`=
`taux_survie_Y65-69`*`survivant_naissance_Y60-64`)
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y70-74`=
`taux_survie_Y70-74`*`survivant_naissance_Y65-69`)
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y75-79`=
`taux_survie_Y75-79`*`survivant_naissance_Y70-74`)
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y80-84`=
`taux_survie_Y80-84`*`survivant_naissance_Y75-79`)
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y85-89`=
if_else(!is.na(`taux_survie_Y_GE85`),
`taux_survie_Y_GE85`*`survivant_naissance_Y80-84`,
`taux_survie_Y85-89`*`survivant_naissance_Y80-84`))
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y90-94`=
if_else(!is.na(`taux_survie_Y_GE90`),
`taux_survie_Y_GE90`*`survivant_naissance_Y85-89`,
`taux_survie_Y_GE85`*`survivant_naissance_Y85-89`))
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y95-99`=
if_else(!is.na(`taux_survie_Y_GE90`),
`taux_survie_Y_GE90`*`survivant_naissance_Y90-94`,
`taux_survie_Y_GE85`*`survivant_naissance_Y90-94`))
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y100-104`=
if_else(!is.na(`taux_survie_Y_GE90`),
`taux_survie_Y_GE90`*`survivant_naissance_Y95-99`,
`taux_survie_Y_GE85`*`survivant_naissance_Y95-99`))
esperance_vie_t <- esperance_vie_t %>% mutate(`survivant_naissance_Y105-109`=
if_else(!is.na(`taux_survie_Y_GE90`),
`taux_survie_Y_GE90`*`survivant_naissance_Y100-104`,
`taux_survie_Y_GE85`*`survivant_naissance_Y100-104`))
#calcul de la mortalité sur les survivants depuis la naissance
esperance_vie_t <- esperance_vie_t %>% mutate(mortalite_naissance_Y_LT5=taux_mortalite_Y_LT5)
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y5-9`=
`taux_mortalite_Y5-9`*survivant_naissance_Y_LT5)
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y10-14`=
`taux_mortalite_Y10-14`*`survivant_naissance_Y5-9`)
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y15-19`=
`taux_mortalite_Y15-19`*`survivant_naissance_Y10-14`)
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y20-24`=
`taux_mortalite_Y20-24`*`survivant_naissance_Y15-19`)
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y25-29`=
`taux_mortalite_Y25-29`*`survivant_naissance_Y20-24`)
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y30-34`=
`taux_mortalite_Y30-34`*`survivant_naissance_Y25-29`)
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y35-39`=
`taux_mortalite_Y35-39`*`survivant_naissance_Y30-34`)
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y40-44`=
`taux_mortalite_Y40-44`*`survivant_naissance_Y35-39`)
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y45-49`=
`taux_mortalite_Y45-49`*`survivant_naissance_Y40-44`)
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y50-54`=
`taux_mortalite_Y50-54`*`survivant_naissance_Y45-49`)
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y55-59`=
`taux_survie_Y55-59`*`survivant_naissance_Y50-54`)
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y60-64`=
`taux_mortalite_Y60-64`*`survivant_naissance_Y55-59`)
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y65-69`=
`taux_mortalite_Y65-69`*`survivant_naissance_Y60-64`)
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y70-74`=
`taux_mortalite_Y70-74`*`survivant_naissance_Y65-69`)
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y75-79`=
`taux_mortalite_Y75-79`*`survivant_naissance_Y70-74`)
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y80-84`=
`taux_mortalite_Y80-84`*`survivant_naissance_Y75-79`)
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y85-89`=
if_else(!is.na(`taux_mortalite_Y_GE85`),
`taux_mortalite_Y_GE85`*`survivant_naissance_Y80-84`,
`taux_mortalite_Y85-89`*`survivant_naissance_Y80-84`))
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y90-94`=
if_else(!is.na(`taux_mortalite_Y_GE90`),
`taux_mortalite_Y_GE90`*`survivant_naissance_Y85-89`,
`taux_mortalite_Y_GE85`*`survivant_naissance_Y85-89`))
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y95-99`=
if_else(!is.na(`taux_mortalite_Y_GE90`),
`taux_mortalite_Y_GE90`*`survivant_naissance_Y90-94`,
`taux_mortalite_Y_GE85`*`survivant_naissance_Y90-94`))
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y100-104`=
if_else(!is.na(`taux_mortalite_Y_GE90`),
`taux_mortalite_Y_GE90`*`survivant_naissance_Y95-99`,
`taux_mortalite_Y_GE85`*`survivant_naissance_Y95-99`))
esperance_vie_t <- esperance_vie_t %>% mutate(`mortalite_naissance_Y105-109`=
if_else(!is.na(`taux_mortalite_Y_GE90`),
`taux_mortalite_Y_GE90`*`survivant_naissance_Y100-104`,
`taux_mortalite_Y_GE85`*`survivant_naissance_Y100-104`))
#sommme des âges gagnés
esperance_vie_t <- esperance_vie_t %>% mutate(esperance_vie_naissance=
mortalite_naissance_Y_LT5*5+
`mortalite_naissance_Y5-9`*7+
`mortalite_naissance_Y10-14`*12+
`mortalite_naissance_Y15-19`*17+
`mortalite_naissance_Y20-24`*22+
`mortalite_naissance_Y25-29`*27+
`mortalite_naissance_Y30-34`*32+
`mortalite_naissance_Y35-39`*37+
`mortalite_naissance_Y40-44`*42+
`mortalite_naissance_Y45-49`*47+
`mortalite_naissance_Y50-54`*52+
`mortalite_naissance_Y55-59`*57+
`mortalite_naissance_Y60-64`*62+
`mortalite_naissance_Y65-69`*67+
`mortalite_naissance_Y70-74`*72+
`mortalite_naissance_Y75-79`*77+
`mortalite_naissance_Y80-84`*82+
`mortalite_naissance_Y85-89`*87+
`mortalite_naissance_Y90-94`*92+
`mortalite_naissance_Y95-99`*97+
`mortalite_naissance_Y100-104`*102+
`mortalite_naissance_Y105-109`*107)
esperance_vie_t$esperance_vie_naissance
esperance_vie_france <- esperance_vie_t %>% filter(geo=="FR")
source("C:/J/COVID/Pierre_CHAILLOT/deces_europe/030_analyse_deces_hebdomadaires.R", encoding = 'UTF-8', echo=TRUE)
source("C:/J/COVID/Pierre_CHAILLOT/deces_europe/030_analyse_deces_hebdomadaires.R", encoding = 'UTF-8', echo=TRUE)
source("C:/J/COVID/Pierre_CHAILLOT/deces_europe/030_analyse_deces_hebdomadaires.R", encoding = 'UTF-8', echo=TRUE)
source("C:/J/COVID/Pierre_CHAILLOT/deces_europe/030_analyse_deces_hebdomadaires.R", encoding = 'UTF-8', echo=TRUE)
source("C:/J/COVID/Pierre_CHAILLOT/deces_europe/030_analyse_deces_hebdomadaires.R", encoding = 'UTF-8', echo=TRUE)
source("C:/J/COVID/Pierre_CHAILLOT/deces_europe/030_analyse_deces_hebdomadaires.R", encoding = 'UTF-8', echo=TRUE)
source("C:/J/COVID/Pierre_CHAILLOT/deces_europe/040-deces_francais.R", encoding = 'UTF-8', echo=TRUE)
source("C:/J/COVID/Pierre_CHAILLOT/deces_europe/040-deces_francais.R", encoding = 'UTF-8', echo=TRUE)
source("C:/J/COVID/Pierre_CHAILLOT/deces_europe/050_delivrance_medicaments.R", encoding = 'UTF-8', echo=TRUE)
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
barplot_deces_france <- readRDS("gen/rds/barplot_deces_france.RDS")
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
barplot_deces_france <- readRDS("gen/rds/Eurostat_barplot_deces_france.RDS")
barplot_deces_france
options(scipen=999)
barplot_decestheo_france <- readRDS("gen/rds/Eurostat_barplot_deces_theo_france.RDS")
barplot_decestheo_france
barplot_deces_france <- readRDS("gen/rds/Eurostat_barplot_deces_france.RDS")
barplot_deces_france
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
barplot_deces_france <- readRDS("gen/rds/Eurostat_barplot_deces_france.RDS")
barplot_deces_france
options(scipen=999)
barplot_decestheo_france <- readRDS("gen/rds/Eurostat_barplot_deces_theo_france.RDS")
barplot_decestheo_france
barplot_deces_france <- readRDS("gen/rds/Eurostat_barplot_deces_france.RDS")
barplot_deces_france
knitr::opts_chunk$set(echo = TRUE)
options(scipen=999)
barplot_deces_france <- readRDS("gen/rds/Eurostat_barplot_deces_france.RDS")
barplot_deces_france
options(scipen=999)
barplot_decestheo_france <- readRDS("gen/rds/Eurostat_barplot_deces_theo_france.RDS")
barplot_decestheo_france
barplot_deces_france <- readRDS("gen/rds/Eurostat_barplot_deces_france.RDS")
barplot_deces_france
version
install.packages(c("rj", "rj.gd"), repos="https://download.walware.de/rj-4.0")
install.packages(c("rj", "rj.gd"), repos="https://download.walware.de/rj-4.0")
install.packages(c("rj", "rj.gd"), repos="https://download.walware.de/rj-4.1")
install.packages(c("rj", "rj.gd"), repos="https://download.walware.de/rj-4.0")
install.packages(c("rj", "rj.gd"), repos="https://download.walware.de/rj-4.0/integration")
>>>>>>> 3a89e74c857b4cd3a02b346849cf1b853153bfbf
